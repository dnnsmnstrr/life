{"version":3,"sources":["LifeTimeline.js","App.js","serviceWorker.js","index.js"],"names":["print_date","date","day","getDate","month","getMonth","getFullYear","LifeTimeline","_ref","subject","_ref$events","events","_ref$birthday_color","birthday_color","_ref$project_days","project_days","_ref$today","today","Date","_useState","Object","objectWithoutProperties","useState","_useState2","slicedToArray","loaded","setLoaded","_useState3","_useState4","lookup","setLookup","_useState5","_useState6","lastEventDate","setLastEventDate","useEffect","ReactTooltip","rebuild","event_end_date","e","date_end","date_start","get_end","useCallback","projected_end","getTime","setDate","all_weeks","fn","birthday","end","cursor","d","get_events_in_week","week_start","week_end","name","this_week","color","single","_events","filter","estart","eend","ongoing","in_week","single_event","age","bd_in_week","title","me","subj","verb","concat","push","generate_lookup","last_event_date","length","latest_event","sort","e1","e2","e1ref","e2ref","latest_end","react_default","a","createElement","index_es","place","effect","className","weeks","start","_single","res","future","st","backgroundColor","tips","map","cls","key","style","data-tip","join","render_week","render_all_weeks","App","setEvents","handleEvents","asyncToGenerator","regenerator_default","mark","_callee","cb","response","json","wrap","_context","prev","next","fetch","sent","console","log","stop","_x","apply","this","arguments","src_LifeTimeline","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96801ab9.chunk.js","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport ReactTooltip from 'react-tooltip'\n\nimport './react-life-timeline.css'\n\nconst print_date = (date) => {\n  var day = date.getDate();\n  var month = date.getMonth() + 1;\n  if (day < 10) {\n    day = '0'+day\n  }\n  if (month < 10) {\n    month = '0'+month\n  };\n  return date.getFullYear()+\"-\"+month+\"-\"+day;\n}\n\nfunction single_event(e) {\n  return (e.single || !e.date_end || e.date_start === e.date_end) && (!e.ongoing);\n}\n\nconst LifeTimeline = ({ subject, events = [], birthday_color = '#F89542', project_days = 200, today = new Date(), ...props}) => {\n  const [loaded, setLoaded] = useState(false)\n  const [lookup, setLookup] = useState({})\n  const [lastEventDate, setLastEventDate] = useState(new Date())\n  useEffect(() => {\n    ReactTooltip.rebuild()\n  }, [lookup])\n\n  const event_end_date = (e) => {\n\t\tif (e.date_end) return new Date(e.date_end)\n\t\telse return new Date(e.date_start)\n\t}\n\n  const get_end = useCallback(() => {\n  \t\tlet projected_end = new Date(lastEventDate.getTime());\n  \t\tprojected_end.setDate(projected_end.getDate() + project_days);\n  \t\treturn projected_end;\n  \t}, [lastEventDate, project_days])\n\n  const all_weeks = useCallback((fn) => {\n    let {birthday} = subject\n    let end = get_end();\n    let cursor = new Date(birthday.getTime());\n    while (cursor <= end) {\n      let d = new Date(cursor.getTime());\n      cursor.setDate(cursor.getDate() + 7);\n      fn(d, new Date(cursor.getTime()));\n    }\n  }, [get_end, subject])\n\n  const get_events_in_week = useCallback((week_start, week_end) => {\n\t\tlet {birthday, name} = subject\n\t\tlet this_week = today >= week_start && today <= week_end;\n\t\tlet color = null;\n\t    let single = false; // Has single events\n\t    let _events = events.filter((e) => {\n\t    \tlet estart = new Date(e.date_start);\n\t    \tlet eend = new Date(e.date_end);\n\t    \tif (e.ongoing) eend = new Date();\n\t    \tlet start_in_week = estart >= week_start && estart < week_end;\n\t    \tlet end_in_week = eend >= week_start && eend < week_end;\n\t    \tlet event_spans_week = estart <= week_start && eend >= week_end;\n\t    \tlet in_week = start_in_week || end_in_week || event_spans_week;\n\t    \tif (in_week) {\n\t    \t\tif (e.color) color = e.color;\n\t    \t\tif (single_event(e)) single = true;\n\t    \t}\n\t    \treturn in_week;\n\t    });\n\t    if (birthday) {\n\t    \tlet age = 0;\n\t    \tlet bd_in_week = false;\n\t    \twhile (week_start < week_end) {\n\t    \t\tif (week_start.getMonth() === birthday.getMonth() && week_start.getDate() === birthday.getDate()) {\n\t    \t\t\tbd_in_week = true;\n\t    \t\t\tage = week_start.getFullYear() - birthday.getFullYear();\n\t    \t\t\tbreak;\n\t    \t\t}\n\t    \t\tweek_start.setDate(week_start.getDate() + 1);\n\t    \t}\n\t    \tif (bd_in_week) {\n\t    \t\tcolor = birthday_color;\n\t    \t\tlet me = name === null;\n\t    \t\tlet title;\n\t    \t\tlet subj = me ? 'I' : name;\n\t    \t\tif (age === 0) {\n\t    \t\t\tlet verb = me ? 'am' : 'is';\n\t    \t\t\ttitle = `${subj} ${verb} born!`;\n\t    \t\t} else {\n\t    \t\t\tlet verb = me ? 'turn' : 'turns';\n\t\t\t\t\ttitle = `${subj} ${verb} ${age} on ${birthday.getMonth()+1}/${birthday.getDate()}`;\n\t    \t\t}\n\t    \t\t_events.push({title: title, color: color});\n\t    \t}\n\t    }\n\t    if (this_week) {\n\t    \tcolor = 'white';\n\t    \t_events.push({title: 'This week', color: color});\n\t    }\n\t    return {\n\t    \tevents: _events,\n\t    \tcolor: color,\n\t    \tsingle: single\n\t    };\n\t}, [birthday_color, events, subject, today])\n\n  const generate_lookup = useCallback(() => {\n    // Generate lookup (event list for each date, by ISO date)\n    let lookup = {};\n    all_weeks((week_start, week_end) => {\n      lookup[print_date(week_start)] = get_events_in_week(week_start, week_end);\n    });\n    setLookup(lookup)\n  }, [all_weeks, get_events_in_week, setLookup])\n\n  useEffect(() => {\n      let last_event_date = new Date();\n  \t\tif (events && events.length > 0) {\n  \t\t\tlet latest_event = events.sort((e1, e2) => {\n  \t\t    \tlet e1ref = event_end_date(e1);\n  \t\t    \tlet e2ref = event_end_date(e2);\n  \t\t    \tif (e2ref > e1ref) return 1;\n  \t\t    \telse if (e2ref < e1ref) return -1;\n  \t\t    \telse return 0;\n  \t\t\t})[0];\n  \t\t\tlet latest_end = event_end_date(latest_event);\n  \t\t\tif (latest_end > last_event_date) {\n  \t\t\t\tlast_event_date = latest_end;\n  \t\t\t}\n  \t\t}\n      setLastEventDate(last_event_date)\n      generate_lookup()\n      setLoaded(true)\n    }, [events, generate_lookup])\n\n\tfunction render_week(date_start, date_end) {\n\t\tlet date = print_date(date_start)\n\t\tlet res = lookup[date]\n\t\tlet _single;\n\t\tlet events = [];\n\t\tlet color;\n\t\tlet single = false;\n\t\tif (res != null) {\n\t\t\t({events, color, single} = res);\n\t\t}\n\t\tlet future = date_start > today;\n\t\tlet st = {};\n\t\tif (events.length > 0) st.backgroundColor = color || '#1AA9FF';\n\t\tlet tips = [date].concat(events.map((e) => {\n\t\t\treturn e.title;\n\t\t}));\n\t\tlet cls = 'week';\n\t\tif (future) cls += ' future';\n\t\tif (single) _single = <span className=\"singleEvents\"></span>;\n\t\treturn <div className={cls} key={date} style={st} data-tip={tips.join(', ')}>{_single}</div>;\n\t}\n\n\tfunction render_all_weeks() {\n\t\tlet weeks = [];\n\t\tall_weeks((start, end) => {\n\t\t\tweeks.push(render_week(start, end));\n\t\t});\n\t\treturn weeks;\n\t}\n\n  return (\n    <div>\n      {loaded && <ReactTooltip place=\"top\" effect=\"solid\" />}\n      <div className=\"LifeTimeline\">\n        { render_all_weeks() }\n      </div>\n    </div>\n  )\n}\n\nexport default LifeTimeline\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport LifeTimeline from './LifeTimeline'\nfunction App() {\n  const [events, setEvents] = useState([])\n  const handleEvents = async (cb) => {\n    const response = await fetch('https://dnnsmnstrr.vercel.app/api/events')\n    const json = await response.json()\n    console.log('json', json)\n    setEvents(json)\n  }\n  useEffect(() => {\n    handleEvents()\n  }, [])\n  return (\n    <div className=\"App\">\n        <p>\n          My life in weeks\n        </p>\n        <LifeTimeline\n      events={events}\n      subject={{birthday: new Date('1997-06-16'), name: 'Dennis'}}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}